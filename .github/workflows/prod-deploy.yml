name: Prod Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Deploy to Production Server
    runs-on: [self-hosted, prod, connected, api]
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Write .env for Compose
        shell: bash
        run: |
          umask 077
          cat > .env << 'EOF'
          SPRING_PROFILES_ACTIVE=${{ secrets.SPRING_PROFILES_ACTIVE }}
          DB_URL=${{ secrets.DB_URL }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}
          CANVAS_URI=${{ secrets.CANVAS_URI }}
          CANVAS_CLIENT_ID=${{ secrets.CANVAS_CLIENT_ID }}
          CANVAS_CLIENT_SECRET=${{ secrets.CANVAS_CLIENT_SECRET }}
          FRONTEND_URI=${{ secrets.FRONTEND_URI }}
          BACKEND_URL=${{ secrets.BACKEND_URL }}
          HIBERNATE_DDL_AUTO=${{ secrets.HIBERNATE_DDL_AUTO }}
          

          # Mail
          MAIL_HOST=${{ secrets.MAIL_HOST }}
          MAIL_PORT=${{ secrets.MAIL_PORT }}
          MAIL_PROTOCOL=${{ secrets.MAIL_PROTOCOL }}
          MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
          
          # Redis
          REDIS_HOST=${{ secrets.REDIS_HOST }}
          REDIS_PORT=${{ secrets.REDIS_PORT }}
          EOF

      - name: Stop and remove old container
        run: docker compose -f compose.prod.yml down || true

      - name: Start new containers
        run: docker compose -f compose.prod.yml up -d --build

      - name: Clean up secrets
        if: always()
        run: rm -f .env

      - name: Cleanup old images
        run: docker image prune -f
